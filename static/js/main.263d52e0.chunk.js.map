{"version":3,"sources":["components/Header.js","components/ScoreCard.js","components/Main.js","components/App.js","index.js"],"names":["Header","react_default","a","createElement","ScoreCard","props","className","Help","time","length","Main","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","startTimer","timer","setInterval","setState","prevState","stopTimer","clearInterval","onChange","feild","defineProperty","target","name","value","state","targetText","inputText","completed","newGame","preventDefault","randNum","Math","floor","random","quotes","randQuote","body","trim","textInput","current","focus","React","createRef","_this2","fetch","then","res","json","data","strLength","split","type","placeholder","autoComplete","onKeyPress","e","key","ref","onClick","Component","App","Main_Main","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.263d52e0.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function Header() {\r\n  return (\r\n    <div>\r\n      <header>\r\n        <h1>TypeSpeed ‚å®</h1>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nexport default function ScoreCard(props) {\r\n  return (\r\n    <div className=\"score\">\r\n      {props.Help ? (\r\n        <div>\r\n          <h1>Instructions</h1>\r\n          <p>\r\n            Your task is to type each word in the given sentence as fast as you\r\n            can.\r\n          </p>\r\n        </div>\r\n      ) : (\r\n        <p>\r\n          Time : {props.time} Seconds\r\n          <br />\r\n          Speed : {props.length / (props.time / 60)} Wpm\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport ScoreCard from \"./ScoreCard\";\r\nimport \"./styles/Main.css\";\r\nexport default class Main extends Component {\r\n  constructor() {\r\n    super();\r\n    this.textInput = React.createRef();\r\n    this.state = {\r\n      time: 0,\r\n      targetText: \"\",\r\n      inputText: \"\",\r\n      quotes: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://api.myjson.com/bins/18o5yk\")\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        this.setState({\r\n          quotes: data\r\n        });\r\n      });\r\n  }\r\n\r\n  startTimer = () => {\r\n    this.timer = setInterval(\r\n      () => this.setState(prevState => ({ time: prevState.time + 1 })),\r\n      1000\r\n    );\r\n  };\r\n\r\n  stopTimer = () => {\r\n    clearInterval(this.timer);\r\n  };\r\n\r\n  onChange = feild => {\r\n    this.setState({\r\n      [feild.target.name]: feild.target.value\r\n    });\r\n\r\n    if (this.state.targetText === this.state.inputText) {\r\n      this.stopTimer();\r\n      this.setState({\r\n        inputText: \"\",\r\n        completed: 1\r\n      });\r\n    }\r\n  };\r\n\r\n  newGame = feild => {\r\n    this.stopTimer();\r\n    this.setState({\r\n      time: 0\r\n    });\r\n    feild.preventDefault();\r\n    const randNum = Math.floor(Math.random() * this.state.quotes.length);\r\n    let randQuote = this.state.quotes[randNum].body;\r\n    randQuote = randQuote.trim();\r\n    this.setState({\r\n      targetText: randQuote,\r\n      inputText: \"\",\r\n      completed: 0\r\n    });\r\n    this.startTimer();\r\n    this.textInput.current.focus();\r\n  };\r\n\r\n  render() {\r\n    let strLength = this.state.targetText.split(\" \").length;\r\n    return (\r\n      <div>\r\n        <div className=\"div1\">\r\n          {this.state.targetText === \"\" ? (\r\n            <p className=\"targetText\">Click on start to begin!</p>\r\n          ) : (\r\n            <p className=\"targetText\">{this.state.targetText}</p>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"typeForm\">\r\n          <form>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Start typing here...\"\r\n              name=\"inputText\"\r\n              autoComplete=\"off\"\r\n              value={this.state.inputText}\r\n              onChange={this.onChange}\r\n              onKeyPress={e => {\r\n                if (e.key === \"Enter\") e.preventDefault();\r\n              }}\r\n              ref={this.textInput}\r\n            />\r\n            <br />\r\n            <button onClick={this.newGame}>TypeRace</button>\r\n          </form>\r\n        </div>\r\n\r\n        <div>\r\n          <p className=\"timer\">Time : {this.state.time}</p>\r\n          {this.state.completed ? (\r\n            <ScoreCard length={strLength} time={this.state.time} />\r\n          ) : (\r\n            <ScoreCard Help={1} />\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Header from \"./Header\";\r\nimport Main from \"./Main\";\r\nimport \"./styles/Header.css\";\r\nexport default class App extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <Main />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\n\r\nimport App from \"./components/App\";\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}